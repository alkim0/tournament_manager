# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-09-29 17:43
from __future__ import unicode_literals

from datetime import date, timedelta

from django.db import migrations, models
import django.db.models.deletion

def create_seasons(apps, schema_editor):
    """Create seasons for all tournaments in the database

    Iterates through all the touraments in the database (sorted by date). If a
    season does not exist for that tournament, then a season is created from
    the Sept. 1 prior to the tournament to the Aug. 31 post the tournament.
    """
    Tournament = apps.get_model("tmdb", "Tournament")
    Season = apps.get_model("tmdb", "Season")
    tournaments = Tournament.objects.order_by('date')
    for tournament in tournaments:
        season_start = date(year=tournament.date.year, month=9, day=1)
        if tournament.date <= season_start:
            season_start = date(year=tournament.date.year - 1, month=9, day=1)
        season_end = date(
                year=season_start.year + 1, month=season_start.month,
                day=season_start.day) - timedelta(days=1)
        assert(tournament.date - season_start >= timedelta())
        assert(tournament.date - season_end <= timedelta())
        season, created = Season.objects.get_or_create(
                start_date=season_start, end_date=season_end)
        tournament.season = season
        tournament.clean()
        tournament.save()

def drop_seasons(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('tmdb', '0011_create_season'),
    ]

    operations = [
        migrations.RunPython(create_seasons, drop_seasons),
        migrations.AlterField(
            model_name='tournament',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tmdb.Season'),
        ),
    ]
